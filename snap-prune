#!/bin/sh

# Copyright (c) 2015-2016 Stefan Tatschner
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

usage() {
    echo "usage: $(basename $0) [-Hdwmy N] [-rvh] TARGET"
    echo ''
    echo 'common options:'
    echo '  -H N         Keep N hourly snapshots'
    echo '  -d N         Keep N daily snapshots'
    echo '  -w N         Keep N weekly snapshots'
    echo '  -m N         Keep N monthly snapshots'
    echo '  -y N         Keep N yearly snapshots'
    echo '  -r           Dry run; do not delete anything'
    echo '  -v           Be verbose'
    echo '  -h           Show this page and exit'
}

prune() {
    # $1: tmpfile that includes list of subvolumes
    # $2: type, for instance "hourly", "daily", ...
    # $3: number of $type to keep
    case "$2" in
        hourly)     regex="^.+hourly.+$";;
        daily)      regex="^.+daily.+$";;
        weekly)     regex="^.+weekly.+$";;
        monthly)    regex="^.+monthly.+$";;
        yearly)     regex="^.+yearly.+$";;
    esac

    snaps=$(grep -E "$regex" "$1" | awk '{print $NF}' | sort)
    n=$(echo "$snaps" | wc -l)

    # TODO: Why is $n always 1 greater?
    if [ "$n" = "1" ]; then
       return
    fi

    i="1"
    if [ "$n" -gt "$3" ]; then
        echo "$snaps" | while read -r snap; do
            remaining=$(($n - $i))

            if [ "$DRYRUN" = "yes" ]; then
                echo "Would delete: /$snap"
            else
                btrfs subvolume delete "$snap"
            fi

            if [ "$remaining" -eq "$3" ]; then
                break
            fi

            i=$(($i + 1))
        done
    fi
}


while getopts "H:d:w:m:y:rvh" arg; do
    case "$arg" in
        H)  HOURLIES="$OPTARG";;
        d)  DAILIES="$OPTARG";;
        w)  WEEKLIES="$OPTARG";;
        m)  MONTHLIES="$OPTARG";;
        y)  YEARLIES="$OPTARG";;
        r)  DRYRUN="yes";;
        v)  VERBOSE="yes";;
        h)  usage && exit 0;;
        *)  usage && exit 1;;
    esac
done

shift $((OPTIND - 1))

cd /
TARGET="$1"
[ -z "$TARGET" ] && usage && exit 1

subvolumes="$(mktemp)"
btrfs subvolume list -os "$TARGET" > "$subvolumes"

[ -n "$HOURLIES" ] && prune "$subvolumes" "hourly" "$HOURLIES"
[ -n "$DAILIES" ]  && prune "$subvolumes" "daily" "$DAILIES"
[ -n "$WEEKLIES" ] && prune "$subvolumes" "weekly" "$WEEKLIES"
[ -n "$HOURLIES" ] && prune "$subvolumes" "monthly" "$MONTHLIES"
[ -n "$YEARLIES" ] && prune "$subvolumes" "yearly" "$YEARLIES"

if [ "$VERBOSE" = "yes" ]; then
    echo "Pruning finished. Keeping:"
    snap-list -l "$TARGET"
fi

# Cleanup temporary file
rm "$subvolumes"
